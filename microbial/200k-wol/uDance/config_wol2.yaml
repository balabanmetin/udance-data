workdir: "wol2"
# options are ["nuc", "prot"]
chartype: "prot"

# options are:
# "de-novo": backbone species will be selected using mainlines (see mainlines_config below)
# "tree": workdir/backbone.nwk is used as the backbone. Therefore genetreeinfer&refine will be skipped
# "list": workdir/species.txt is used as the list of backbone species. therefore mainlines will be skipped. However,
# genetreeinfer&refine will still run to get a backbone tree.
backbone: "tree"

resources:
  # MBs
  large_memory: 120000
  # cores used in monolithic tasks such as decompose and prep_backbone_alignments
  cores: 16

trim_config:
  # sites with less non-gap fraction than below will be removed
  percent_nongap: 0.05

mainlines_config:
  # target number of taxa
  n: 100
  # concatenation alignment length
  length: 5000

apples_config:
  # [FM, OLS]
  method: FM
  # float. (0-infinity)
  filter: 0.2
  # integer. (5-infinity)
  base: 25
  # minimum overlap fraction. Default  is 0.001
  overlap: 0.05

prep_config:
  # cluster must have a minimum diameter
  edge_thr: 0.1
  # approximate cluster size (no guarantees)
  cluster_size: 2500
  # minimum subtree alignment length
  sublength: 100
  # minimum fragment length
  fraglength: 75
  # large clusters are pruned. ASTRAL's limit is around 9000 for 400+ genes.
  pruneafter: 6000

infer_config:
  # [raxml-ng,iqtree,raxml-8]
  method: "raxml-ng"
  # number of starting trees
  numstart: 2
  # threads per core
  numthread: 1

refine_config:
  # contract low support branches threshold. 0.9 for iqtree -abayes
  contract: 0.66
  # gene occupancy threshold for inclusion
  occupancy: 30
  # 1D k-means-based (k=2) outlier gene detection parameter. Limit for outlier size fraction.
  # Larger clusters cannot be designated as outliers
  outlier_sizelimit: 0.2
  # 1D k-means-based (k=2) outlier gene detection parameter. Centroid difference must be
  # larger than this value to designate the first cluster as outliers.
  outlier_difference: 0.1
  # Experimental. Infer branch lengths in substitution unit using ASTRAL. [True, False]
  infer_branchlen: True

